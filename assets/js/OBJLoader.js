THREE.OBJLoader=function(){function a(){var a={objects:[],object:{},vertices:[],normals:[],uvs:[],materialLibraries:[],startObject:function(a,b){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=a,void(this.object.fromDeclaration=!1!==b);var c=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:a||"",fromDeclaration:!1!==b,geometry:{vertices:[],normals:[],uvs:[]},materials:[],smooth:!0,startMaterial:function(a,b){var c=this._finalize(!1);c&&(c.inherited||c.groupCount<=0)&&this.materials.splice(c.index,1);var d={index:this.materials.length,name:a||"",mtllib:Array.isArray(b)&&b.length>0?b[b.length-1]:"",smooth:void 0!==c?c.smooth:this.smooth,groupStart:void 0!==c?c.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(a){var b={index:"number"==typeof a?a:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return b.clone=this.clone.bind(b),b}};return this.materials.push(d),d},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(a){var b=this.currentMaterial();if(b&&-1===b.groupEnd&&(b.groupEnd=this.geometry.vertices.length/3,b.groupCount=b.groupEnd-b.groupStart,b.inherited=!1),a&&this.materials.length>1)for(var c=this.materials.length-1;c>=0;c--)this.materials[c].groupCount<=0&&this.materials.splice(c,1);return a&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),b}},c&&c.name&&"function"==typeof c.clone){var d=c.clone(0);d.inherited=!0,this.object.materials.push(d)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(a,b){var c=parseInt(a,10);return 3*(c>=0?c-1:c+b/3)},parseNormalIndex:function(a,b){var c=parseInt(a,10);return 3*(c>=0?c-1:c+b/3)},parseUVIndex:function(a,b){var c=parseInt(a,10);return 2*(c>=0?c-1:c+b/2)},addVertex:function(a,b,c){var d=this.vertices,e=this.object.geometry.vertices;e.push(d[a+0],d[a+1],d[a+2]),e.push(d[b+0],d[b+1],d[b+2]),e.push(d[c+0],d[c+1],d[c+2])},addVertexLine:function(a){var b=this.vertices;this.object.geometry.vertices.push(b[a+0],b[a+1],b[a+2])},addNormal:function(a,b,c){var d=this.normals,e=this.object.geometry.normals;e.push(d[a+0],d[a+1],d[a+2]),e.push(d[b+0],d[b+1],d[b+2]),e.push(d[c+0],d[c+1],d[c+2])},addUV:function(a,b,c){var d=this.uvs,e=this.object.geometry.uvs;e.push(d[a+0],d[a+1]),e.push(d[b+0],d[b+1]),e.push(d[c+0],d[c+1])},addUVLine:function(a){var b=this.uvs;this.object.geometry.uvs.push(b[a+0],b[a+1])},addFace:function(a,b,c,d,e,f,g,h,i){var j=this.vertices.length,k=this.parseVertexIndex(a,j),l=this.parseVertexIndex(b,j),m=this.parseVertexIndex(c,j);if(this.addVertex(k,l,m),void 0!==d){var n=this.uvs.length;k=this.parseUVIndex(d,n),l=this.parseUVIndex(e,n),m=this.parseUVIndex(f,n),this.addUV(k,l,m)}if(void 0!==g){var o=this.normals.length;k=this.parseNormalIndex(g,o),l=g===h?k:this.parseNormalIndex(h,o),m=g===i?k:this.parseNormalIndex(i,o),this.addNormal(k,l,m)}},addLineGeometry:function(a,b){this.object.geometry.type="Line";for(var c=this.vertices.length,d=this.uvs.length,e=0,f=a.length;e<f;e++)this.addVertexLine(this.parseVertexIndex(a[e],c));for(var g=0,f=b.length;g<f;g++)this.addUVLine(this.parseUVIndex(b[g],d))}};return a.startObject("",!1),a}function b(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager,this.materials=null}var c=/^[og]\s*(.+)?/,d=/^mtllib /,e=/^usemtl /;return b.prototype={constructor:b,load:function(a,b,c,d){var e=this,f=new THREE.FileLoader(e.manager);f.setPath(this.path),f.load(a,function(a){b(e.parse(a))},c,d)},setPath:function(a){this.path=a},setMaterials:function(a){return this.materials=a,this},parse:function(b){console.time("OBJLoader");var f=new a;-1!==b.indexOf("\r\n")&&(b=b.replace(/\r\n/g,"\n")),-1!==b.indexOf("\\\n")&&(b=b.replace(/\\\n/g,""));for(var g=b.split("\n"),h="",i="",j=[],k="function"==typeof"".trimLeft,l=0,m=g.length;l<m;l++)if(h=g[l],h=k?h.trimLeft():h.trim(),0!==h.length&&"#"!==(i=h.charAt(0)))if("v"===i){var n=h.split(/\s+/);switch(n[0]){case"v":f.vertices.push(parseFloat(n[1]),parseFloat(n[2]),parseFloat(n[3]));break;case"vn":f.normals.push(parseFloat(n[1]),parseFloat(n[2]),parseFloat(n[3]));break;case"vt":f.uvs.push(parseFloat(n[1]),parseFloat(n[2]))}}else if("f"===i){for(var o=h.substr(1).trim(),p=o.split(/\s+/),q=[],r=0,s=p.length;r<s;r++){var t=p[r];if(t.length>0){var u=t.split("/");q.push(u)}}for(var v=q[0],r=1,s=q.length-1;r<s;r++){var w=q[r],x=q[r+1];f.addFace(v[0],w[0],x[0],v[1],w[1],x[1],v[2],w[2],x[2])}}else if("l"===i){var y=h.substring(1).trim().split(" "),z=[],A=[];if(-1===h.indexOf("/"))z=y;else for(var B=0,C=y.length;B<C;B++){var D=y[B].split("/");""!==D[0]&&z.push(D[0]),""!==D[1]&&A.push(D[1])}f.addLineGeometry(z,A)}else if(null!==(j=c.exec(h))){var E=(" "+j[0].substr(1).trim()).substr(1);f.startObject(E)}else if(e.test(h))f.object.startMaterial(h.substring(7).trim(),f.materialLibraries);else if(d.test(h))f.materialLibraries.push(h.substring(7).trim());else{if("s"!==i){if("\0"===h)continue;throw new Error("Unexpected line: '"+h+"'")}if(j=h.split(" "),j.length>1){var F=j[1].trim().toLowerCase();f.object.smooth="0"!==F&&"off"!==F}else f.object.smooth=!0;var G=f.object.currentMaterial();G&&(G.smooth=f.object.smooth)}f.finalize();var H=new THREE.Group;H.materialLibraries=[].concat(f.materialLibraries);for(var l=0,m=f.objects.length;l<m;l++){var I=f.objects[l],J=I.geometry,K=I.materials,L="Line"===J.type;if(0!==J.vertices.length){var M=new THREE.BufferGeometry;M.addAttribute("position",new THREE.BufferAttribute(new Float32Array(J.vertices),3)),J.normals.length>0?M.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(J.normals),3)):M.computeVertexNormals(),J.uvs.length>0&&M.addAttribute("uv",new THREE.BufferAttribute(new Float32Array(J.uvs),2));for(var N=[],O=0,P=K.length;O<P;O++){var Q=K[O],G=void 0;if(null!==this.materials&&(G=this.materials.create(Q.name),L&&G&&!(G instanceof THREE.LineBasicMaterial))){var R=new THREE.LineBasicMaterial;R.copy(G),G=R}G||(G=L?new THREE.LineBasicMaterial:new THREE.MeshPhongMaterial,G.name=Q.name),G.flatShading=!Q.smooth,N.push(G)}var S;if(N.length>1){for(var O=0,P=K.length;O<P;O++){var Q=K[O];M.addGroup(Q.groupStart,Q.groupCount,O)}S=L?new THREE.LineSegments(M,N):new THREE.Mesh(M,N)}else S=L?new THREE.LineSegments(M,N[0]):new THREE.Mesh(M,N[0]);S.name=I.name,H.add(S)}}return console.timeEnd("OBJLoader"),H}},b}();